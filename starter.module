<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Database\Query\AlterableInterface;

/**
 * Implements hook_query_TAG_alter
 * Exclude content type bundles from core Drupal search
 */
function starter_query_search_node_search_alter(AlterableInterface $query) {
  $config = \Drupal::config('exclude_content_types.settings');
  $bundles_config = $config->get('bundles');
  $hidden_bundles = [];
  if(!empty($bundles_config)) {
    foreach ($bundles_config as $k => $v) {
      // if the value is not 0, add it to the array
      if ($v) {
        $hidden_bundles[] = $k;
      }
    }
  }

  if (!empty($hidden_bundles)) {
    // add the extra table to join based on config logic
    $query->join('node', 'n2', 'n.nid = n2.nid');
    $query->condition('n2.type', $hidden_bundles, 'NOT IN');
  }
}

/**
* Redirect drupal users to admin content page on login.
*/
function starter_user_login($account) {

  // make sure we're not dealing with login from password reset
  if(strpos(Drupal::request()->getPathInfo(),'user/reset')===false) {
    $response = new Symfony\Component\HttpFoundation\RedirectResponse('/admin/content');
    $response->send();
    exit;
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function starter_page_attachments_alter(array &$attachments) {
  foreach ($attachments['#attached']['html_head'] as $key => $attachment) {
    // remove generated by drupal meta tag
    if ($attachment[1] == 'system_meta_generator') {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function starter_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  global $base_url;

  // Some pages (such as view pages) don't have the below set so we return.
  if(! isset($build['#attached']['html_head_link'])) {
    return;
  }

  foreach ($build['#attached']['html_head_link'] as $key => $attachment) {
    // set front page shortlink to base url
    if (\Drupal::service('path.matcher')->isFrontPage() && $attachment[0]['rel'] == 'shortlink') {
      $build['#attached']['html_head_link'][$key][0]['href'] = $base_url;
    }
    // set front page canonical to base url
    elseif (\Drupal::service('path.matcher')->isFrontPage() && $attachment[0]['rel'] == 'canonical') {
      $build['#attached']['html_head_link'][$key][0]['href'] = $base_url;
    }
    // remove revision
    if ($attachment[0]['rel'] == 'revision') {
      unset($build['#attached']['html_head_link'][$key]);
    }
  }
}

/**
 * Twig theme suggestions.
 */

function get_path_alias() {
  $current_path = \Drupal::service('path.current')->getPath();
  $result = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  $path_alias = trim($result, '/');
  $path_alias = str_replace('-', '_', $path_alias);
  $path_alias = str_replace('/', '_', $path_alias);

  return $path_alias;
}

// Page
function starter_theme_suggestions_page_alter(array &$suggestions, array $variables, $hook) {
  // Path Alias
  $path_alias = get_path_alias();

  $suggestions[] = 'page__path_alias__'.$path_alias;
}

// Region
function starter_theme_suggestions_region_alter(array &$suggestions, array $variables, $hook) {
  // Path Alias
  $path_alias = get_path_alias();

  $suggestions[] = $suggestions[0].'__path_alias__'.$path_alias;
}

// View
/*function starter_theme_suggestions_view_alter(array &$suggestions, array $variables, $hook) {

}*/

/**
 * End of Theme Suggestions.
 */